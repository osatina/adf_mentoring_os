{
	"name": "Module11",
	"properties": {
		"activities": [
			{
				"name": "Web1",
				"type": "WebActivity",
				"dependsOn": [
					{
						"activity": "Copy from Data Lake credits to SQL credits",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"url": {
						"value": "@pipeline().globalParameters.logiappsecretvalue",
						"type": "Expression"
					},
					"method": "GET",
					"body": {
						"value": "{\n\n    \"pipelineName\": \"@{pipeline().parameters.pipelineName}\",\n\n    \"dataFactoryName\": \"@{pipeline().parameters.dataFactoryName}\",\n\n    \"pipelineRunId\": \"@{pipeline().parameters.pipelineRunId}\",\n\n    \"errorMessage\": \"@{pipeline().parameters.pipelineErrorMessage}\",\n\n    \"receiver\": \"@{pipeline().parameters.receiver}\",\n\n    \"emailSubject\":\"Pipeline run:@{pipeline().parameters.pipelineName} - @{pipeline().parameters.dataFactoryName}\",\n\n    \"emailBody\": \"Data factory: @{pipeline().parameters.dataFactoryName}\\nPipeline name: @{pipeline().parameters.pipelineName}\\nPipeline run ID: @{pipeline().parameters.pipelineRunId}\\nError message:@{pipeline().parameters.pipelineErrorMessage}\"\n\n}\n\n",
						"type": "Expression"
					},
					"authentication": {
						"type": "MSI",
						"resource": "https://vault.azure.net"
					}
				}
			},
			{
				"name": "Web2",
				"type": "WebActivity",
				"dependsOn": [
					{
						"activity": "Web1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"url": {
						"value": "@activity('Web1').output.value",
						"type": "Expression"
					},
					"method": "POST",
					"body": {
						"value": "{\n\n \"pipelineName\": \"@{pipeline().Pipeline}\",\n\n \"dataFactoryName\": \"@{pipeline().DataFactory}\",\n\n \"pipelineRunId\": \"@{pipeline().RunId}\",\n\n \"receiver\": \"@{pipeline().parameters.receiver}\",\n\n \"pipelineErrorMessage\":\"@{activity('Copy from Data Lake credits to SQL credits').output.errors[0].Message}\",\n\n \"status\": \"@{activity('Copy from Data Lake credits to SQL credits').output.executionDetails[0].status}\"}",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Copy from Data Lake credits to SQL credits",
				"type": "Copy",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [
					{
						"name": "Source",
						"value": "raw/meta-driven/credits.csv"
					},
					{
						"name": "Destination",
						"value": "stg.credits"
					}
				],
				"typeProperties": {
					"source": {
						"type": "DelimitedTextSource",
						"additionalColumns": [
							{
								"name": "pipelineId",
								"value": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								}
							},
							{
								"name": "source_filename",
								"value": "$$FILEPATH"
							}
						],
						"storeSettings": {
							"type": "AzureBlobFSReadSettings",
							"recursive": false,
							"wildcardFolderPath": "movies",
							"enablePartitionDiscovery": false
						},
						"formatSettings": {
							"type": "DelimitedTextReadSettings"
						}
					},
					"sink": {
						"type": "AzureSqlSink",
						"preCopyScript": "TRUNCATE TABLE [stg].[credits]",
						"writeBehavior": "insert",
						"sqlWriterUseTableLock": false,
						"disableMetricsCollection": false
					},
					"enableStaging": false,
					"enableSkipIncompatibleRow": false,
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"name": "cast"
								},
								"sink": {
									"name": "cast"
								}
							},
							{
								"source": {
									"name": "crew"
								},
								"sink": {
									"name": "crew"
								}
							},
							{
								"source": {
									"name": "id"
								},
								"sink": {
									"name": "id"
								}
							},
							{
								"source": {
									"name": "pipelineId"
								},
								"sink": {
									"name": "pipelineId"
								}
							},
							{
								"source": {
									"name": "source_filename"
								},
								"sink": {
									"name": "source_filename"
								}
							}
						],
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "source_Module10",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "target_SQL_stg_credits",
						"type": "DatasetReference"
					}
				]
			}
		],
		"parameters": {
			"pipelineName": {
				"type": "string",
				"defaultValue": "Module_11"
			},
			"dataFactoryName": {
				"type": "string",
				"defaultValue": "mentoring-adf-os"
			},
			"pipelineRunId": {
				"type": "string",
				"defaultValue": "dd"
			},
			"pipelineErrorMessage": {
				"type": "string",
				"defaultValue": "dddd"
			},
			"receiver": {
				"type": "string",
				"defaultValue": "osatina@outlook.com"
			},
			"emailSubject": {
				"type": "string",
				"defaultValue": "sd"
			},
			"emailBody": {
				"type": "string",
				"defaultValue": "sd"
			},
			"status": {
				"type": "string",
				"defaultValue": "Failed"
			}
		},
		"annotations": [],
		"lastPublishTime": "2023-05-02T15:47:42Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}